//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arnolyzer {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Arnolyzer.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method parameters must not use REF or OUT parameters; all results should be via a return.
        /// </summary>
        internal static string MethodParameterMustNotBeRefOrOutDescription {
            get {
                return ResourceManager.GetString("MethodParameterMustNotBeRefOrOutDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter `{0}` of method `{1}` must not use {2}.
        /// </summary>
        internal static string MethodParameterMustNotBeRefOrOutMessageFormat {
            get {
                return ResourceManager.GetString("MethodParameterMustNotBeRefOrOutMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method parameters must not  use REF or OUT.
        /// </summary>
        internal static string MethodParameterMustNotBeRefOrOutTitle {
            get {
                return ResourceManager.GetString("MethodParameterMustNotBeRefOrOutTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static methods should have at least one parameter.
        /// </summary>
        internal static string StaticMethodMustHaveAtLeastOneParameterDescription {
            get {
                return ResourceManager.GetString("StaticMethodMustHaveAtLeastOneParameterDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static method &apos;{0}&apos; doesn&apos;t have any parameters. It should have at least one.
        /// </summary>
        internal static string StaticMethodMustHaveAtLeastOneParameterMessageFormat {
            get {
                return ResourceManager.GetString("StaticMethodMustHaveAtLeastOneParameterMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static methods must have at least one parameter.
        /// </summary>
        internal static string StaticMethodMustHaveAtLeastOneParameterTitle {
            get {
                return ResourceManager.GetString("StaticMethodMustHaveAtLeastOneParameterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static methods should return a value (must not be null).
        /// </summary>
        internal static string StaticMethodMustNotBeVoidDescription {
            get {
                return ResourceManager.GetString("StaticMethodMustNotBeVoidDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static method &apos;{0}&apos; is void. It should return a value.
        /// </summary>
        internal static string StaticMethodMustNotBeVoidMessageFormat {
            get {
                return ResourceManager.GetString("StaticMethodMustNotBeVoidMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Static methods must not be void.
        /// </summary>
        internal static string StaticMethodMustNotBeVoidTitle {
            get {
                return ResourceManager.GetString("StaticMethodMustNotBeVoidTitle", resourceCulture);
            }
        }
    }
}
