using System;
using Arnolyzer.Analyzers.PureFunctionAnalyzers;
using Arnolyzer.Tests.DiagnosticVerification;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using SuccincT.Options;

namespace Arnolyzer.Tests.SyntacticAnalyzers.PureFunctionAnalyzersTests
{
    [TestClass]
    public class AA1000StaticMethodsShouldNotBeVoidAnalyzerTests
    {
        [TestMethod]
        public void NoCode_ShouldYieldNoDiagnostics() => DiagnosticVerifier.VerifyDiagnostics<AA1000StaticMethodsShouldNotBeVoidAnalyzer>(TestFiles.EmptyFile);

        [TestMethod]
        public void CodeWithTwoVoidMethods_YieldsTwoDiagnostics()
        {
            var commonExpected = new DiagnosticResultCommonProperties(new AA1000StaticMethodsShouldNotBeVoidAnalyzer());
            var expected1 =
                new DiagnosticResult(commonExpected,
                                     String.Format(Resources.AA1000StaticMethodsShouldNotBeVoidMessageFormat, "DoNothing"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(5, 28, 37)));

            var expected2 =
                new DiagnosticResult(commonExpected,
                                     String.Format(Resources.AA1000StaticMethodsShouldNotBeVoidMessageFormat, "StillDoNothing"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(8, 28, 42)));

            DiagnosticVerifier.VerifyDiagnostics<AA1000StaticMethodsShouldNotBeVoidAnalyzer>(TestFiles.CodeToTestStaticVoidAnalyzer, expected1, expected2);
        }

        [TestMethod]
        public void AutogeneratedCode_YieldsNoDiagnostics() =>
            DiagnosticVerifier.VerifyDiagnostics<AA1000StaticMethodsShouldNotBeVoidAnalyzer>(TestFiles.AutogeneratedStaticVoidCode);

        [TestMethod]
        public void CodeInIgnoredFile_YieldsNoDiagnostics() =>
            DiagnosticVerifier.VerifyDiagnostics<AA1000StaticMethodsShouldNotBeVoidAnalyzer>(TestFiles.FileThatShouldBeIgnored);

        [TestMethod]
        public void CodeWithSetters_YieldsNoDiagnostics() =>
            DiagnosticVerifier.VerifyDiagnostics<AA1000StaticMethodsShouldNotBeVoidAnalyzer>(TestFiles.CodeToTestStaticVoidAnalyzerIgnoresSetters);

        [TestMethod]
        public void CodeWithFourVoidMethodsTwoWithIgnoreRuleAttributes_YieldsTwoDiagnostic()
        {
            var commonExpected = new DiagnosticResultCommonProperties(new AA1000StaticMethodsShouldNotBeVoidAnalyzer());
            var expected1 =
                new DiagnosticResult(commonExpected,
                                     String.Format(Resources.AA1000StaticMethodsShouldNotBeVoidMessageFormat, "DoNothing1"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(8, 28, 38)));

            var expected2 =
                new DiagnosticResult(commonExpected,
                                     String.Format(Resources.AA1000StaticMethodsShouldNotBeVoidMessageFormat, "DoNothing4"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(17, 28, 38)));

            DiagnosticVerifier.VerifyDiagnostics<AA1000StaticMethodsShouldNotBeVoidAnalyzer>(TestFiles.CodeToTestStaticVoidAnalyzerRespectsAttributes,
                                                                 expected1,
                                                                 expected2);
        }
    }
}