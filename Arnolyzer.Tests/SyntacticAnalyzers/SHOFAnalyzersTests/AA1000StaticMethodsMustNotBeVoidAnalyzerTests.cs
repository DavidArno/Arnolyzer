using Arnolyzer.SyntacticAnalyzers.SHOFAnalyzers;
using Arnolyzer.Tests.DiagnosticVerification;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using SuccincT.Options;
using static System.String;
using static Arnolyzer.Tests.DiagnosticVerification.DiagnosticVerifier;
using static Arnolyzer.Tests.SyntacticAnalyzers.TestFiles;

namespace Arnolyzer.Tests.SyntacticAnalyzers.SHOFAnalyzersTests
{
    [TestClass]
    public class AA1000StaticMethodsMustNotBeVoidAnalyzerTests
    {
        [TestMethod]
        public void NoCode_ShouldYieldNoDiagnostics() => VerifyDiagnostics<AA1000StaticMethodsMustNotBeVoidAnalyzer>(EmptyFile);

        [TestMethod]
        public void CodeWithTwoVoidMethods_YieldsTwoDiagnostics()
        {
            var commonExpected = new DiagnosticResultCommonProperties(new AA1000StaticMethodsMustNotBeVoidAnalyzer());
            var expected1 =
                new DiagnosticResult(commonExpected,
                                     Format(Resources.AA1000StaticMethodsMustNotBeVoidMessageFormat, "DoNothing"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(5, 28, 37)));

            var expected2 =
                new DiagnosticResult(commonExpected,
                                     Format(Resources.AA1000StaticMethodsMustNotBeVoidMessageFormat, "StillDoNothing"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(8, 28, 42)));

            VerifyDiagnostics<AA1000StaticMethodsMustNotBeVoidAnalyzer>(CodeToTestStaticVoidAnalyzer, expected1, expected2);
        }

        [TestMethod]
        public void AutogeneratedCode_YieldsNoDiagnostics() =>
            VerifyDiagnostics<AA1000StaticMethodsMustNotBeVoidAnalyzer>(AutogeneratedStaticVoidCode);

        [TestMethod]
        public void CodeInIgnoredFile_YieldsNoDiagnostics() =>
            VerifyDiagnostics<AA1000StaticMethodsMustNotBeVoidAnalyzer>(FileThatShouldBeIgnored);

        [TestMethod]
        public void CodeWithSetters_YieldsNoDiagnostics() =>
            VerifyDiagnostics<AA1000StaticMethodsMustNotBeVoidAnalyzer>(CodeToTestStaticVoidAnalyzerIgnoresSetters);

        [TestMethod]
        public void CodeWithFourVoidMethodsTwoWithIgnoreRuleAttributes_YieldsTwoDiagnostic()
        {
            var commonExpected = new DiagnosticResultCommonProperties(new AA1000StaticMethodsMustNotBeVoidAnalyzer());
            var expected1 =
                new DiagnosticResult(commonExpected,
                                     Format(Resources.AA1000StaticMethodsMustNotBeVoidMessageFormat, "DoNothing1"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(8, 28, 38)));

            var expected2 =
                new DiagnosticResult(commonExpected,
                                     Format(Resources.AA1000StaticMethodsMustNotBeVoidMessageFormat, "DoNothing4"),
                                     Option<DiagnosticLocation>.Some(new DiagnosticLocation(17, 28, 38)));

            VerifyDiagnostics<AA1000StaticMethodsMustNotBeVoidAnalyzer>(CodeToTestStaticVoidAnalyzerRespectsAttributes,
                                                                 expected1,
                                                                 expected2);
        }
    }
}